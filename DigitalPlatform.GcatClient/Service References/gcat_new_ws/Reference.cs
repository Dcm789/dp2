//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalPlatform.GcatClient.gcat_new_ws {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://dp2003.com/gcat/")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dp2003.com/gcat/", ConfigurationName="gcat_new_ws.GcatService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface GcatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/gcat/GcatService/GetNumber", ReplyAction="http://dp2003.com/gcat/GcatService/GetNumberResponse")]
        int GetNumber(string strID, string strAuthor, bool bSelectPinyin, bool bSelectEntry, bool bOutputDebugInfo, ref DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions, out string strNumber, out string strDebugInfo, out string strError);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/gcat/GcatService/GetNumber", ReplyAction="http://dp2003.com/gcat/GcatService/GetNumberResponse")]
        System.IAsyncResult BeginGetNumber(string strID, string strAuthor, bool bSelectPinyin, bool bSelectEntry, bool bOutputDebugInfo, ref DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions, System.AsyncCallback callback, object asyncState);
        
        int EndGetNumber(ref DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions, out string strNumber, out string strDebugInfo, out string strError, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/gcat/GcatService/GetPinyin", ReplyAction="http://dp2003.com/gcat/GcatService/GetPinyinResponse")]
        int GetPinyin(out string strPinyinXml, out string strError, string strID, string strText);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/gcat/GcatService/GetPinyin", ReplyAction="http://dp2003.com/gcat/GcatService/GetPinyinResponse")]
        System.IAsyncResult BeginGetPinyin(string strID, string strText, System.AsyncCallback callback, object asyncState);
        
        int EndGetPinyin(out string strPinyinXml, out string strError, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/gcat/GcatService/SetPinyin", ReplyAction="http://dp2003.com/gcat/GcatService/SetPinyinResponse")]
        int SetPinyin(out string strError, string strID, string strPinyinXml);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/gcat/GcatService/SetPinyin", ReplyAction="http://dp2003.com/gcat/GcatService/SetPinyinResponse")]
        System.IAsyncResult BeginSetPinyin(string strID, string strPinyinXml, System.AsyncCallback callback, object asyncState);
        
        int EndSetPinyin(out string strError, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/gcat/GcatService/SplitHanzi", ReplyAction="http://dp2003.com/gcat/GcatService/SplitHanziResponse")]
        int SplitHanzi(out string[] tokens, out string strError, string strID, string strText);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/gcat/GcatService/SplitHanzi", ReplyAction="http://dp2003.com/gcat/GcatService/SplitHanziResponse")]
        System.IAsyncResult BeginSplitHanzi(string strID, string strText, System.AsyncCallback callback, object asyncState);
        
        int EndSplitHanzi(out string[] tokens, out string strError, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GcatServiceChannel : DigitalPlatform.GcatClient.gcat_new_ws.GcatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.GcatClient.gcat_new_ws.Question[])(this.results[0]));
            }
        }
        
        public string strNumber {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string strDebugInfo {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public string strError {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPinyinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPinyinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strPinyinXml {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string strError {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetPinyinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetPinyinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strError {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SplitHanziCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SplitHanziCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] tokens {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        public string strError {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GcatServiceClient : System.ServiceModel.ClientBase<DigitalPlatform.GcatClient.gcat_new_ws.GcatService>, DigitalPlatform.GcatClient.gcat_new_ws.GcatService {
        
        private BeginOperationDelegate onBeginGetNumberDelegate;
        
        private EndOperationDelegate onEndGetNumberDelegate;
        
        private System.Threading.SendOrPostCallback onGetNumberCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPinyinDelegate;
        
        private EndOperationDelegate onEndGetPinyinDelegate;
        
        private System.Threading.SendOrPostCallback onGetPinyinCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPinyinDelegate;
        
        private EndOperationDelegate onEndSetPinyinDelegate;
        
        private System.Threading.SendOrPostCallback onSetPinyinCompletedDelegate;
        
        private BeginOperationDelegate onBeginSplitHanziDelegate;
        
        private EndOperationDelegate onEndSplitHanziDelegate;
        
        private System.Threading.SendOrPostCallback onSplitHanziCompletedDelegate;
        
        public GcatServiceClient() {
        }
        
        public GcatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GcatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GcatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GcatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetNumberCompletedEventArgs> GetNumberCompleted;
        
        public event System.EventHandler<GetPinyinCompletedEventArgs> GetPinyinCompleted;
        
        public event System.EventHandler<SetPinyinCompletedEventArgs> SetPinyinCompleted;
        
        public event System.EventHandler<SplitHanziCompletedEventArgs> SplitHanziCompleted;
        
        public int GetNumber(string strID, string strAuthor, bool bSelectPinyin, bool bSelectEntry, bool bOutputDebugInfo, ref DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions, out string strNumber, out string strDebugInfo, out string strError) {
            return base.Channel.GetNumber(strID, strAuthor, bSelectPinyin, bSelectEntry, bOutputDebugInfo, ref questions, out strNumber, out strDebugInfo, out strError);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNumber(string strID, string strAuthor, bool bSelectPinyin, bool bSelectEntry, bool bOutputDebugInfo, ref DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNumber(strID, strAuthor, bSelectPinyin, bSelectEntry, bOutputDebugInfo, ref questions, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetNumber(ref DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions, out string strNumber, out string strDebugInfo, out string strError, System.IAsyncResult result) {
            return base.Channel.EndGetNumber(ref questions, out strNumber, out strDebugInfo, out strError, result);
        }
        
        private System.IAsyncResult OnBeginGetNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strID = ((string)(inValues[0]));
            string strAuthor = ((string)(inValues[1]));
            bool bSelectPinyin = ((bool)(inValues[2]));
            bool bSelectEntry = ((bool)(inValues[3]));
            bool bOutputDebugInfo = ((bool)(inValues[4]));
            DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions = ((DigitalPlatform.GcatClient.gcat_new_ws.Question[])(inValues[5]));
            return this.BeginGetNumber(strID, strAuthor, bSelectPinyin, bSelectEntry, bOutputDebugInfo, ref questions, callback, asyncState);
        }
        
        private object[] OnEndGetNumber(System.IAsyncResult result) {
            DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions = this.GetDefaultValueForInitialization<DigitalPlatform.GcatClient.gcat_new_ws.Question[]>();
            string strNumber = this.GetDefaultValueForInitialization<string>();
            string strDebugInfo = this.GetDefaultValueForInitialization<string>();
            string strError = this.GetDefaultValueForInitialization<string>();
            int retVal = this.EndGetNumber(ref questions, out strNumber, out strDebugInfo, out strError, result);
            return new object[] {
                    questions,
                    strNumber,
                    strDebugInfo,
                    strError,
                    retVal};
        }
        
        private void OnGetNumberCompleted(object state) {
            if ((this.GetNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNumberCompleted(this, new GetNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNumberAsync(string strID, string strAuthor, bool bSelectPinyin, bool bSelectEntry, bool bOutputDebugInfo, DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions) {
            this.GetNumberAsync(strID, strAuthor, bSelectPinyin, bSelectEntry, bOutputDebugInfo, questions, null);
        }
        
        public void GetNumberAsync(string strID, string strAuthor, bool bSelectPinyin, bool bSelectEntry, bool bOutputDebugInfo, DigitalPlatform.GcatClient.gcat_new_ws.Question[] questions, object userState) {
            if ((this.onBeginGetNumberDelegate == null)) {
                this.onBeginGetNumberDelegate = new BeginOperationDelegate(this.OnBeginGetNumber);
            }
            if ((this.onEndGetNumberDelegate == null)) {
                this.onEndGetNumberDelegate = new EndOperationDelegate(this.OnEndGetNumber);
            }
            if ((this.onGetNumberCompletedDelegate == null)) {
                this.onGetNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNumberCompleted);
            }
            base.InvokeAsync(this.onBeginGetNumberDelegate, new object[] {
                        strID,
                        strAuthor,
                        bSelectPinyin,
                        bSelectEntry,
                        bOutputDebugInfo,
                        questions}, this.onEndGetNumberDelegate, this.onGetNumberCompletedDelegate, userState);
        }
        
        public int GetPinyin(out string strPinyinXml, out string strError, string strID, string strText) {
            return base.Channel.GetPinyin(out strPinyinXml, out strError, strID, strText);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPinyin(string strID, string strText, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPinyin(strID, strText, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetPinyin(out string strPinyinXml, out string strError, System.IAsyncResult result) {
            return base.Channel.EndGetPinyin(out strPinyinXml, out strError, result);
        }
        
        private System.IAsyncResult OnBeginGetPinyin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strID = ((string)(inValues[0]));
            string strText = ((string)(inValues[1]));
            return this.BeginGetPinyin(strID, strText, callback, asyncState);
        }
        
        private object[] OnEndGetPinyin(System.IAsyncResult result) {
            string strPinyinXml = this.GetDefaultValueForInitialization<string>();
            string strError = this.GetDefaultValueForInitialization<string>();
            int retVal = this.EndGetPinyin(out strPinyinXml, out strError, result);
            return new object[] {
                    strPinyinXml,
                    strError,
                    retVal};
        }
        
        private void OnGetPinyinCompleted(object state) {
            if ((this.GetPinyinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPinyinCompleted(this, new GetPinyinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPinyinAsync(string strID, string strText) {
            this.GetPinyinAsync(strID, strText, null);
        }
        
        public void GetPinyinAsync(string strID, string strText, object userState) {
            if ((this.onBeginGetPinyinDelegate == null)) {
                this.onBeginGetPinyinDelegate = new BeginOperationDelegate(this.OnBeginGetPinyin);
            }
            if ((this.onEndGetPinyinDelegate == null)) {
                this.onEndGetPinyinDelegate = new EndOperationDelegate(this.OnEndGetPinyin);
            }
            if ((this.onGetPinyinCompletedDelegate == null)) {
                this.onGetPinyinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPinyinCompleted);
            }
            base.InvokeAsync(this.onBeginGetPinyinDelegate, new object[] {
                        strID,
                        strText}, this.onEndGetPinyinDelegate, this.onGetPinyinCompletedDelegate, userState);
        }
        
        public int SetPinyin(out string strError, string strID, string strPinyinXml) {
            return base.Channel.SetPinyin(out strError, strID, strPinyinXml);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPinyin(string strID, string strPinyinXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPinyin(strID, strPinyinXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndSetPinyin(out string strError, System.IAsyncResult result) {
            return base.Channel.EndSetPinyin(out strError, result);
        }
        
        private System.IAsyncResult OnBeginSetPinyin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strID = ((string)(inValues[0]));
            string strPinyinXml = ((string)(inValues[1]));
            return this.BeginSetPinyin(strID, strPinyinXml, callback, asyncState);
        }
        
        private object[] OnEndSetPinyin(System.IAsyncResult result) {
            string strError = this.GetDefaultValueForInitialization<string>();
            int retVal = this.EndSetPinyin(out strError, result);
            return new object[] {
                    strError,
                    retVal};
        }
        
        private void OnSetPinyinCompleted(object state) {
            if ((this.SetPinyinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPinyinCompleted(this, new SetPinyinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPinyinAsync(string strID, string strPinyinXml) {
            this.SetPinyinAsync(strID, strPinyinXml, null);
        }
        
        public void SetPinyinAsync(string strID, string strPinyinXml, object userState) {
            if ((this.onBeginSetPinyinDelegate == null)) {
                this.onBeginSetPinyinDelegate = new BeginOperationDelegate(this.OnBeginSetPinyin);
            }
            if ((this.onEndSetPinyinDelegate == null)) {
                this.onEndSetPinyinDelegate = new EndOperationDelegate(this.OnEndSetPinyin);
            }
            if ((this.onSetPinyinCompletedDelegate == null)) {
                this.onSetPinyinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPinyinCompleted);
            }
            base.InvokeAsync(this.onBeginSetPinyinDelegate, new object[] {
                        strID,
                        strPinyinXml}, this.onEndSetPinyinDelegate, this.onSetPinyinCompletedDelegate, userState);
        }
        
        public int SplitHanzi(out string[] tokens, out string strError, string strID, string strText) {
            return base.Channel.SplitHanzi(out tokens, out strError, strID, strText);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSplitHanzi(string strID, string strText, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSplitHanzi(strID, strText, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndSplitHanzi(out string[] tokens, out string strError, System.IAsyncResult result) {
            return base.Channel.EndSplitHanzi(out tokens, out strError, result);
        }
        
        private System.IAsyncResult OnBeginSplitHanzi(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strID = ((string)(inValues[0]));
            string strText = ((string)(inValues[1]));
            return this.BeginSplitHanzi(strID, strText, callback, asyncState);
        }
        
        private object[] OnEndSplitHanzi(System.IAsyncResult result) {
            string[] tokens = this.GetDefaultValueForInitialization<string[]>();
            string strError = this.GetDefaultValueForInitialization<string>();
            int retVal = this.EndSplitHanzi(out tokens, out strError, result);
            return new object[] {
                    tokens,
                    strError,
                    retVal};
        }
        
        private void OnSplitHanziCompleted(object state) {
            if ((this.SplitHanziCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SplitHanziCompleted(this, new SplitHanziCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SplitHanziAsync(string strID, string strText) {
            this.SplitHanziAsync(strID, strText, null);
        }
        
        public void SplitHanziAsync(string strID, string strText, object userState) {
            if ((this.onBeginSplitHanziDelegate == null)) {
                this.onBeginSplitHanziDelegate = new BeginOperationDelegate(this.OnBeginSplitHanzi);
            }
            if ((this.onEndSplitHanziDelegate == null)) {
                this.onEndSplitHanziDelegate = new EndOperationDelegate(this.OnEndSplitHanzi);
            }
            if ((this.onSplitHanziCompletedDelegate == null)) {
                this.onSplitHanziCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSplitHanziCompleted);
            }
            base.InvokeAsync(this.onBeginSplitHanziDelegate, new object[] {
                        strID,
                        strText}, this.onEndSplitHanziDelegate, this.onSplitHanziCompletedDelegate, userState);
        }
    }
}
